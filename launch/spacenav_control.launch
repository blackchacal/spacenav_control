<launch>
  <!-- 
    Add the robot_description param to be able to control the robot(s) joints. 
    As an example it is used the panda manipulator available on the franka_ros package.
    Currently only supports revolute joints. 
  -->
  <param name="robot_description" command="$(find xacro)/xacro $(find franka_description)/robots/panda_arm_hand.urdf.xacro" />
  
  <!-- 
    Dependency node to get the spacemouse data. It connects space mouse to the
    ROS environment. 
  -->
  <node name="spacenav" pkg="spacenav_node" type="spacenav_node"/>

  <!-- 
    Space mouse sensitivity: How quickly the robot will move during Position Relative mode.
    Accepted values: 0 = Low, 1 = Medium, 2 = High 
   -->
  <arg name="sensitivity" default="1"/>
  <!-- 
    Defines if the spacemouse is being used on the real robot or simulation in gazebo.
    Accepted values: 1/true = real robot, 0/false = simulation 
   -->
  <arg name="is_robot" default="false"/>

  <!-- Main node to add various control features to spacemouse. -->
  <node name="spacenav_control" pkg="spacenav_control" type="spacenav_control_node" args="-s $(arg sensitivity) -r $(arg is_robot)" output="screen" respawn="true">
    <!-- This param defines the topic subscribed by the robot controller to send commands to the joints -->
    <param name="controller_topic" type="str" value="/panda_arm_controller/command" />

    <!-- This param defines the message type of the topic subscribed by the robot controller to send commands to the joints -->
    <param name="controller_topic_type" type="str" value="trajectory_msgs::JointTrajectory" />

    <!-- This param defines the topic published by the robot with the current state -->
    <param name="robot_state_topic" type="str" value="/cartesian_impedance_controller/current_pose" />

    <!-- This param defines the message type of the topic published by the robot with the current state -->
    <param name="robot_state_topic_type" type="str" value="geometry_msgs::Pose" />
  </node>
</launch>